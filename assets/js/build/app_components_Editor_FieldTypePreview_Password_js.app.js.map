{"version":3,"file":"app_components_Editor_FieldTypePreview_Password_js.app.js","mappings":";;;;;;;;;;;;;;;;;AAA0B;AAE1B,MAAMC,QAAQ,GAAGA,CAAE;EAAEC;AAAM,CAAC,KAAMC,oDAAA,CAACH,6CAAI;EAACE,KAAK,EAAGA,KAAO;EAACE,IAAI,EAAC;AAAU,CAAE,CAAC;AAE1E,iEAAeH,QAAQ;;;;;;;;;;;;;;;;;;;;ACJmB;AACK;AAE/C,MAAMD,IAAI,GAAGA,CAAE;EAAEE,KAAK;EAAEE,IAAI,GAAG;AAAO,CAAC,KAAM;EAC5C,MAAMG,OAAO,GAAGL,KAAK,CAACK,OAAO,IAAIJ,oDAAA;IAAMK,SAAS,EAAC;EAAuB,GAAGN,KAAK,CAACK,OAAe,CAAC;EACjG,MAAME,MAAM,GAAGP,KAAK,CAACO,MAAM,IAAIN,oDAAA;IAAMK,SAAS,EAAC;EAAuB,GAAGN,KAAK,CAACO,MAAc,CAAC;EAC9F,MAAMC,KAAK,GAAGP,oDAAA;IAAOC,IAAI,EAAGA,IAAM;IAACO,WAAW,EAAGT,KAAK,CAACS,WAAa;IAACC,IAAI,EAAGV,KAAK,CAACU,IAAM;IAACC,KAAK,EAAGX,KAAK,CAACY,GAAG,IAAI,EAAI;IAACC,QAAQ,EAAGT,iDAASA;EAAE,CAAE,CAAC;EAE5I,OAAOC,OAAO,IAAIE,MAAM,GACrBN,oDAAA;IAAKK,SAAS,EAAC;EAAkB,GAAGD,OAAO,EAAIG,KAAK,EAAID,MAAa,CAAC,GACtEC,KAAK;AACT,CAAC;;AAED;AACA,iEAAeL,wDAAI,CAAEL,IAAI,EAAE,CAAEgB,IAAI,EAAEC,IAAI,KACtCD,IAAI,CAACZ,IAAI,KAAKa,IAAI,CAACb,IAAI,IACpBY,IAAI,CAACd,KAAK,CAACK,OAAO,KAAKU,IAAI,CAACf,KAAK,CAACK,OAAO,IACzCS,IAAI,CAACd,KAAK,CAACO,MAAM,KAAKQ,IAAI,CAACf,KAAK,CAACO,MAAM,IACvCO,IAAI,CAACd,KAAK,CAACS,WAAW,KAAKM,IAAI,CAACf,KAAK,CAACS,WAAW,IACjDK,IAAI,CAACd,KAAK,CAACU,IAAI,KAAKK,IAAI,CAACf,KAAK,CAACU,IAAI,IACnCI,IAAI,CAACd,KAAK,CAACY,GAAG,KAAKG,IAAI,CAACf,KAAK,CAACY,GAChC,CAAC","sources":["webpack:///./app/components/Editor/FieldTypePreview/Password.js","webpack:///./app/components/Editor/FieldTypePreview/Text.js"],"sourcesContent":["import Text from \"./Text\";\n\nconst Password = ( { field } ) => <Text field={ field } type=\"password\" />;\n\nexport default Password;","import { memo } from \"@wordpress/element\";\nimport { doNothing } from \"../../../functions\";\n\nconst Text = ( { field, type = \"text\" } ) => {\n\tconst prepend = field.prepend && <span className=\"rwmb-input-group-text\">{ field.prepend }</span>;\n\tconst append = field.append && <span className=\"rwmb-input-group-text\">{ field.append }</span>;\n\tconst input = <input type={ type } placeholder={ field.placeholder } size={ field.size } value={ field.std || '' } onChange={ doNothing } />;\n\n\treturn prepend || append\n\t\t? <div className=\"rwmb-input-group\">{ prepend }{ input }{ append }</div>\n\t\t: input;\n};\n\n// Memo to avoid re-rendering because there might be a lot of fields with this field type.\nexport default memo( Text, ( prev, next ) => (\n\tprev.type === next.type\n\t&& prev.field.prepend === next.field.prepend\n\t&& prev.field.append === next.field.append\n\t&& prev.field.placeholder === next.field.placeholder\n\t&& prev.field.size === next.field.size\n\t&& prev.field.std === next.field.std\n) );"],"names":["Text","Password","field","createElement","type","memo","doNothing","prepend","className","append","input","placeholder","size","value","std","onChange","prev","next"],"sourceRoot":""}