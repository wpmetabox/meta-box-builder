{"version":3,"file":"app_controls_FileSize_js.app.js","mappings":";;;;;;;;;;;;;;;;;;;AAA8C;AAChB;AAE9B,MAAME,QAAQ,GAAGA,CAAE;EAAEC,YAAY;EAAEC,WAAW;EAAEC,IAAI;EAAEC,WAAW;EAAE,GAAGC;AAAK,CAAC,KAAM;EACjF,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGT,4DAAQ,CAAEG,YAAY,CAACO,OAAO,CAAE,SAAS,EAAE,EAAG,CAAC,CAACC,IAAI,CAAC,CAAE,CAAC;EACtF,MAAM,CAAEC,MAAM,EAAEC,SAAS,CAAE,GAAGb,4DAAQ,CAAEG,YAAY,CAACO,OAAO,CAAE,QAAQ,EAAE,EAAG,CAAC,CAACC,IAAI,CAAC,CAAC,IAAI,IAAK,CAAC;EAE7F,MAAMG,YAAY,GAAGC,CAAC,IAAI;IACzBN,SAAS,CAAEM,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC;IAC3B,MAAMA,KAAK,GAAGF,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIL,MAAM,GAAG,GAAIG,CAAC,CAACC,MAAM,CAACC,KAAK,GAAKL,MAAM,EAAG,GAAG,EAAE;IAC9EN,WAAW,CAAED,IAAI,EAAEY,KAAM,CAAC;EAC3B,CAAC;EACD,MAAMC,YAAY,GAAGH,CAAC,IAAI;IACzBF,SAAS,CAAEE,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC;IAC3B,MAAMA,KAAK,GAAGT,MAAM,IAAIO,CAAC,CAACC,MAAM,CAACC,KAAK,GAAG,GAAIT,MAAM,GAAKO,CAAC,CAACC,MAAM,CAACC,KAAK,EAAG,GAAG,EAAE;IAC9EX,WAAW,CAAED,IAAI,EAAEY,KAAM,CAAC;EAC3B,CAAC;EAED,OACCE,oDAAA,CAAClB,+CAAM;IAACmB,OAAO,EAAGhB,WAAa;IAAA,GAAMG;EAAI,GACxCY,oDAAA;IAAKE,SAAS,EAAC;EAAsC,GACpDF,oDAAA;IACCG,IAAI,EAAC,QAAQ;IACbC,GAAG,EAAC,GAAG;IACPC,EAAE,EAAGpB,WAAa;IAClBa,KAAK,EAAGT,MAAQ;IAChBiB,QAAQ,EAAGX;EAAc,CACzB,CAAC,EACFK,oDAAA;IAAQF,KAAK,EAAGL,MAAQ;IAACa,QAAQ,EAAGP;EAAc,GACjDC,oDAAA;IAAQF,KAAK,EAAC;EAAI,GAAC,IAAU,CAAC,EAC9BE,oDAAA;IAAQF,KAAK,EAAC;EAAI,GAAC,IAAU,CAAC,EAC9BE,oDAAA;IAAQF,KAAK,EAAC;EAAI,GAAC,IAAU,CACtB,CACJ,CACE,CAAC;AAEX,CAAC;AAED,iEAAef,QAAQ","sources":["webpack:///./app/controls/FileSize.js"],"sourcesContent":["import { useState } from \"@wordpress/element\";\nimport DivRow from './DivRow';\n\nconst FileSize = ( { defaultValue, componentId, name, updateField, ...rest } ) => {\n\tconst [ number, setNumber ] = useState( defaultValue.replace( /[^0-9]+/, '' ).trim() );\n\tconst [ suffix, setSuffix ] = useState( defaultValue.replace( /[0-9]+/, '' ).trim() || 'kb' );\n\n\tconst updateNumber = e => {\n\t\tsetNumber( e.target.value );\n\t\tconst value = e.target.value && suffix ? `${ e.target.value }${ suffix }` : '';\n\t\tupdateField( name, value );\n\t};\n\tconst updateSuffix = e => {\n\t\tsetSuffix( e.target.value );\n\t\tconst value = number && e.target.value ? `${ number }${ e.target.value }` : '';\n\t\tupdateField( name, value );\n\t};\n\n\treturn (\n\t\t<DivRow htmlFor={ componentId } { ...rest }>\n\t\t\t<div className=\"og-input-group og-input-group--small\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tmin=\"0\"\n\t\t\t\t\tid={ componentId }\n\t\t\t\t\tvalue={ number }\n\t\t\t\t\tonChange={ updateNumber }\n\t\t\t\t/>\n\t\t\t\t<select value={ suffix } onChange={ updateSuffix }>\n\t\t\t\t\t<option value=\"kb\">KB</option>\n\t\t\t\t\t<option value=\"mb\">MB</option>\n\t\t\t\t\t<option value=\"gb\">GB</option>\n\t\t\t\t</select>\n\t\t\t</div>\n\t\t</DivRow>\n\t);\n};\n\nexport default FileSize;"],"names":["useState","DivRow","FileSize","defaultValue","componentId","name","updateField","rest","number","setNumber","replace","trim","suffix","setSuffix","updateNumber","e","target","value","updateSuffix","createElement","htmlFor","className","type","min","id","onChange"],"sourceRoot":""}