{"version":3,"file":"app_controls_GroupTitle_js.app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAqC;AACU;AACP;AACV;AACc;AAE5C,MAAMK,UAAU,GAAGA,CAAE;EAAEC,IAAI;EAAEC,WAAW;EAAEC,KAAK;EAAEC,WAAW;EAAE,GAAGC;AAAK,CAAC,KAAM;EAC5E,MAAM;IAAEC;EAAU,CAAC,GAAGV,8DAAW,CAAC,CAAC;EAEnC,IAAIW,MAAM,GAAGV,2DAAO,CAAEM,KAAK,CAACK,GAAI,CAAC,CAAEC,KAAK,IAAIA,KAAK,CAACF,MAAO,CAAC;EAE1D,MAAMG,WAAW,GAAG,CAAE,YAAY,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,OAAO,CAAE;EACnGH,MAAM,GAAGA,MAAM,CACbI,MAAM,CAAEC,CAAC,IAAI,CAACF,WAAW,CAACG,QAAQ,CAAED,CAAC,CAACE,IAAK,CAAE,CAAC,CAC9CC,GAAG,CAAEH,CAAC,IAAI,CAAEA,CAAC,CAACI,EAAE,EAAE,GAAIJ,CAAC,CAACX,IAAI,KAAOW,CAAC,CAACI,EAAE,GAAI,CAAG,CAAC;EAEjDT,MAAM,GAAG,CAAE,CAAE,KAAK,EAAEZ,mDAAE,CAAE,iBAAiB,EAAE,kBAAmB,CAAC,CAAE,EAAE,GAAGY,MAAM,CAAE;EAE9E,MAAMU,YAAY,GAAGA,CAAEC,QAAQ,EAAEC,KAAK,KAAMf,WAAW,CAAE,aAAa,EAAEe,KAAM,CAAC;EAE/E,MAAMC,gBAAgB,GAAGA,CAAEF,QAAQ,EAAEC,KAAK,KAAM;IAC/C,MAAME,KAAK,GAAGF,KAAK,KAAK,KAAK,GAAGA,KAAK,GAAG,IAAKb,SAAS,CAAC,CAAC,GAAKa,KAAK,GAAI;IACtED,QAAQ,CAACI,OAAO,CAACH,KAAK,IAAIE,KAAK;IAC/BjB,WAAW,CAAE,aAAa,EAAEc,QAAQ,CAACI,OAAO,CAACH,KAAM,CAAC;EACrD,CAAC;EAED,OACCI,oDAAA,CAACzB,+CAAM;IAAC0B,SAAS,EAAC,gBAAgB;IAACC,OAAO,EAAGvB,WAAa;IAAA,GAAMG;EAAI,GACnEkB,oDAAA,CAACxB,sDAAa;IAACiB,EAAE,EAAGd,WAAa;IAACwB,YAAY,EAAGvB,KAAK,CAACwB,WAAa;IAACC,KAAK,EAAGrB,MAAQ;IAACsB,QAAQ,EAAGZ,YAAc;IAACa,QAAQ,EAAGV;EAAkB,CAAE,CACxI,CAAC;AAEX,CAAC;AAED,iEAAepB,UAAU","sources":["webpack:///./app/controls/GroupTitle.js"],"sourcesContent":["import { __ } from \"@wordpress/i18n\";\nimport useSettings from '../hooks/useSettings';\nimport getList from '../list-functions';\nimport DivRow from './DivRow';\nimport FieldInserter from './FieldInserter';\n\nconst GroupTitle = ( { name, componentId, field, updateField, ...rest } ) => {\n\tconst { getPrefix } = useSettings();\n\n\tlet fields = getList( field._id )( state => state.fields );\n\n\tconst ignoreTypes = [ 'background', 'button', 'custom_html', 'divider', 'heading', 'tab', 'group' ];\n\tfields = fields\n\t\t.filter( f => !ignoreTypes.includes( f.type ) )\n\t\t.map( f => [ f.id, `${ f.name } (${ f.id })` ] );\n\n\tfields = [ [ '{#}', __( 'Entry index (#)', 'meta-box-builder' ) ], ...fields ];\n\n\tconst handleChange = ( inputRef, value ) => updateField( 'group_title', value );\n\n\tconst handleSelectItem = ( inputRef, value ) => {\n\t\tconst title = value === '{#}' ? value : `{${ getPrefix() }${ value }}`;\n\t\tinputRef.current.value += title;\n\t\tupdateField( 'group_title', inputRef.current.value );\n\t};\n\n\treturn (\n\t\t<DivRow className=\"og-group-title\" htmlFor={ componentId } { ...rest }>\n\t\t\t<FieldInserter id={ componentId } defaultValue={ field.group_title } items={ fields } onChange={ handleChange } onSelect={ handleSelectItem } />\n\t\t</DivRow>\n\t);\n};\n\nexport default GroupTitle;"],"names":["__","useSettings","getList","DivRow","FieldInserter","GroupTitle","name","componentId","field","updateField","rest","getPrefix","fields","_id","state","ignoreTypes","filter","f","includes","type","map","id","handleChange","inputRef","value","handleSelectItem","title","current","createElement","className","htmlFor","defaultValue","group_title","items","onChange","onSelect"],"sourceRoot":""}