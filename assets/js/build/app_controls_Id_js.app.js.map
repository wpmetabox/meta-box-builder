{"version":3,"file":"app_controls_Id_js.app.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAuD;AACT;AACD;AACf;AAE9B,MAAMM,EAAE,GAAGA,CAAE;EAAEC,KAAK;EAAEC,WAAW;EAAEC,WAAW;EAAE,GAAGC;AAAK,CAAC,KAAM;EAC9D,MAAM;IAAEC,IAAI,EAAEC;EAAI,CAAC,GAAGR,yDAAQ,CAAE;IAAES,GAAG,EAAE,YAAY;IAAEC,YAAY,EAAE;EAAG,CAAE,CAAC;EACzE,MAAM,CAAEC,kBAAkB,EAAEC,qBAAqB,CAAE,GAAGf,4DAAQ,CAAE,CAAC,CAAE,CAAC;EACpE,MAAM,CAAEgB,SAAS,EAAEC,YAAY,CAAE,GAAGjB,4DAAQ,CAAE,KAAM,CAAC;EAErD,MAAMkB,YAAY,GAAGC,CAAC,IAAI;IACzBX,WAAW,CAAE,IAAI,EAAEW,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC;IACnCb,WAAW,CAAE,aAAa,EAAE,IAAK,CAAC;IAClCc,gBAAgB,CAAEH,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC;EACnC,CAAC;EAED,MAAMC,gBAAgB,GAAGD,KAAK,IAAI;IACjC;IACA,IAAKV,GAAG,CAAEU,KAAK,CAAE,KAAKE,SAAS,IAAIZ,GAAG,CAAEU,KAAK,CAAE,EAAEG,GAAG,KAAKlB,KAAK,CAACkB,GAAG,EAAG;MACpET,qBAAqB,CAAEJ,GAAG,CAAEU,KAAK,CAAG,CAAC;MACrCJ,YAAY,CAAE,IAAK,CAAC;MACpB;IACD;IAEAF,qBAAqB,CAAE,CAAC,CAAE,CAAC;IAC3BE,YAAY,CAAE,KAAM,CAAC;EACtB,CAAC;EAED,OACCQ,oDAAA,CAACrB,+CAAM;IAACsB,OAAO,EAAGnB,WAAa;IAAA,GAAME;EAAI,GACxCgB,oDAAA;IACCE,IAAI,EAAC,MAAM;IACXC,EAAE,EAAGrB,WAAa;IAClBc,KAAK,EAAGf,KAAK,CAACsB,EAAI;IAClBC,QAAQ,EAAGX,YAAc;IACzBY,OAAO,EAAC;EAAiB,CACzB,CAAC,EAEDd,SAAS,IACTS,oDAAA,CAAC1B,uDAAO;IAACgC,SAAS,EAAC;EAAyB,GAE1C7B,wDAAO,CACND,mDAAE,CAAE,gIAAgI,EAAE,kBAAmB,CAAC,EAC1Ja,kBAAkB,CAACkB,IAAI,EACvBlB,kBAAkB,CAACmB,KACpB,CAEO,CAEH,CAAC;AAEX,CAAC;AAED,iEAAe5B,EAAE","sources":["webpack:///./app/controls/Id.js"],"sourcesContent":["import { RawHTML, useState } from '@wordpress/element';\nimport { __, sprintf } from \"@wordpress/i18n\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport DivRow from './DivRow';\n\nconst Id = ( { field, componentId, updateField, ...rest } ) => {\n\tconst { data: ids } = useFetch( { api: 'fields-ids', defaultValue: [] } );\n\tconst [ existingFieldGroup, setExistingFieldGroup ] = useState( {} );\n\tconst [ duplicate, setDuplicate ] = useState( false );\n\n\tconst handleChange = e => {\n\t\tupdateField( 'id', e.target.value );\n\t\tupdateField( '_id_changed', true );\n\t\tcheckDuplicateId( e.target.value );\n\t};\n\n\tconst checkDuplicateId = value => {\n\t\t// Has a duplicate and not the current field\n\t\tif ( ids[ value ] !== undefined && ids[ value ]?._id !== field._id ) {\n\t\t\tsetExistingFieldGroup( ids[ value ] );\n\t\t\tsetDuplicate( true );\n\t\t\treturn;\n\t\t}\n\n\t\tsetExistingFieldGroup( {} );\n\t\tsetDuplicate( false );\n\t};\n\n\treturn (\n\t\t<DivRow htmlFor={ componentId } { ...rest }>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tid={ componentId }\n\t\t\t\tvalue={ field.id }\n\t\t\t\tonChange={ handleChange }\n\t\t\t\tpattern=\"[A-Za-z0-9\\-_]+\"\n\t\t\t/>\n\t\t\t{\n\t\t\t\tduplicate &&\n\t\t\t\t<RawHTML className=\"og-description og-error\">\n\t\t\t\t\t{\n\t\t\t\t\t\tsprintf(\n\t\t\t\t\t\t\t__( 'This ID already exists in the field group <a href=\"%s\">%s</a>, please change it or edit that field group to avoid duplication.', 'meta-box-builder' ),\n\t\t\t\t\t\t\texistingFieldGroup.link,\n\t\t\t\t\t\t\texistingFieldGroup.title\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t</RawHTML>\n\t\t\t}\n\t\t</DivRow>\n\t);\n};\n\nexport default Id;"],"names":["RawHTML","useState","__","sprintf","useFetch","DivRow","Id","field","componentId","updateField","rest","data","ids","api","defaultValue","existingFieldGroup","setExistingFieldGroup","duplicate","setDuplicate","handleChange","e","target","value","checkDuplicateId","undefined","_id","createElement","htmlFor","type","id","onChange","pattern","className","link","title"],"sourceRoot":""}