{"version":3,"file":"app_controls_AdminColumnsPosition_js.app.js","mappings":"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","sources":["webpack:///./app/controls/AdminColumnsPosition.js"],"sourcesContent":["import { __ } from \"@wordpress/i18n\";\nimport useAllFields from \"../hooks/useAllFields\";\nimport useSettings from \"../hooks/useSettings\";\nimport DivRow from './DivRow';\nimport FieldInserter from './FieldInserter';\n\nconst AdminColumnsPosition = ( { componentId, defaultValue, updateField, ...rest } ) => {\n\tconst { getObjectType } = useSettings();\n\tconst objectType = getObjectType();\n\n\tconst defaultColumns = {\n\t\tterm: 'name',\n\t\tuser: 'username'\n\t};\n\tconst defaultColumn = defaultColumns[ objectType ] || 'title';\n\n\t// Select only text and select fields.\n\tlet fields = useAllFields()\n\t\t.filter( field => [ 'text', 'select' ].includes( field.type ) )\n\t\t.map( field => [ field.id, `${ field.name } (${ field.id })` ] );\n\n\tfields = [ ...objectTypeFields( objectType ), ...fields ];\n\n\tconst handleChangeType = e => updateField( 'admin_columns.position.type', e.target.value );\n\tconst handleChangeColumn = ( inputRef, value ) => updateField( 'admin_columns.position.column', value );\n\tconst handleSelectColumn = ( inputRef, value ) => {\n\t\tinputRef.current.value = value;\n\t\tupdateField( 'admin_columns.position.column', value );\n\t};\n\n\tlet type;\n\tlet column;\n\tif ( typeof defaultValue === 'string' ) {\n\t\tconst parts = defaultValue.split( ' ' );\n\t\ttype = parts[ 0 ] || 'after';\n\t\tcolumn = parts[ 1 ] || defaultColumn;\n\t} else {\n\t\ttype = defaultValue.type || 'after';\n\t\tcolumn = defaultValue.column || defaultColumn;\n\t}\n\n\treturn (\n\t\t<DivRow { ...rest }>\n\t\t\t<select defaultValue={ type } onChange={ handleChangeType }>\n\t\t\t\t<option value=\"after\">{ __( 'After', 'meta-box-builder' ) }</option>\n\t\t\t\t<option value=\"before\">{ __( 'Before', 'meta-box-builder' ) }</option>\n\t\t\t\t<option value=\"replace\">{ __( 'Replace', 'meta-box-builder' ) }</option>\n\t\t\t</select>\n\t\t\t<FieldInserter\n\t\t\t\tid={ componentId }\n\t\t\t\tdefaultValue={ column }\n\t\t\t\titems={ fields }\n\t\t\t\tisID={ true }\n\t\t\t\texclude={ objectTypeFields( objectType ) }\n\t\t\t\tonChange={ handleChangeColumn }\n\t\t\t\tonSelect={ handleSelectColumn }\n\t\t\t/>\n\t\t</DivRow>\n\t);\n};\n\nconst objectTypeFields = objectType => {\n\tif ( objectType === 'term' ) {\n\t\treturn [\n\t\t\t[ 'cb', __( 'Checkbox', 'meta-box-builder' ) ],\n\t\t\t[ 'name', __( 'Name', 'meta-box-builder' ) ],\n\t\t\t[ 'description', __( 'Description', 'meta-box-builder' ) ],\n\t\t\t[ 'slug', __( 'Slug', 'meta-box-builder' ) ],\n\t\t\t[ 'count', __( 'Count', 'meta-box-builder' ) ],\n\t\t];\n\t}\n\n\tif ( objectType === 'user' ) {\n\t\treturn [\n\t\t\t[ 'cb', __( 'Checkbox', 'meta-box-builder' ) ],\n\t\t\t[ 'username', __( 'Username', 'meta-box-builder' ) ],\n\t\t\t[ 'name', __( 'Name', 'meta-box-builder' ) ],\n\t\t\t[ 'email', __( 'Email', 'meta-box-builder' ) ],\n\t\t\t[ 'role', __( 'Role', 'meta-box-builder' ) ],\n\t\t\t[ 'posts', __( 'Posts', 'meta-box-builder' ) ],\n\t\t];\n\t}\n\n\treturn [\n\t\t[ 'cb', __( 'Checkbox', 'meta-box-builder' ) ],\n\t\t[ 'title', __( 'Title', 'meta-box-builder' ) ],\n\t\t[ 'author', __( 'Author', 'meta-box-builder' ) ],\n\t\t[ 'categories', __( 'Categories', 'meta-box-builder' ) ],\n\t\t[ 'tags', __( 'Tags', 'meta-box-builder' ) ],\n\t\t[ 'comments', __( 'Comments', 'meta-box-builder' ) ],\n\t\t[ 'date', __( 'Date', 'meta-box-builder' ) ],\n\t];\n};\n\nexport default AdminColumnsPosition;"],"names":["__","useAllFields","useSettings","DivRow","FieldInserter","AdminColumnsPosition","componentId","defaultValue","updateField","rest","getObjectType","objectType","defaultColumns","term","user","defaultColumn","fields","filter","field","includes","type","map","id","name","objectTypeFields","handleChangeType","e","target","value","handleChangeColumn","inputRef","handleSelectColumn","current","column","parts","split","createElement","onChange","items","isID","exclude","onSelect"],"sourceRoot":""}